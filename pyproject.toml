[tool.poetry]
name = "livecodebench"
version = "0.1.0"
description = "Official Repository for Evaluation of LiveCodeBench"
authors = ["Naman Jain <naman1205jain@gmail.com>"]
readme = "README.md"

[[tool.poetry.source]]
name = 'pypi_'  # needed until python-poetry/poetry#3456 is resolved.
url = 'https://pypi.org/simple'
priority = 'primary'

[tool.poetry.dependencies]
python = ">=3.10 <4"
pebble = "^5.0.7"
datasets = "^2.18.0"
google-generativeai = "^0.5.0"
anthropic = "^0.25.1"
openai = "^1.17.1"
mistralai = "^0.1.8"
pyext = "0.7"

[tool.poetry.group.with-gpu]
optional = true

[tool.poetry.group.with-gpu.dependencies]
vllm = "^0.4.0.post1"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Ignore Errors and Warnings
ignore = [
    "F401",  # Module imported but unused
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = True

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = 80


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
